@import url('https://fonts.googleapis.com/css2?family=Ubuntu:wght@300;400;700&display=swap');

/* Shared palette and typography (from App1) */

/**
 * @block shared-root-tokens
 * @rol Define la paleta bÃ sica i mides comunes per a totes les apps.
 * @dep App1 palette baseline
 */
:root {
  --controls-offset-y: 45px;
  --unit-label-offset: -40px;
  --bg-light: #ECECEC;
  --bg-dark: #43433B;
  --text-light: #43433B;
  --text-dark: #EEE8D8;
  --color-lg: #5C7AEA;
  --color-v: #2E8B57;
  --color-t: #E57373;
  --selection-color: #F97C39;
  --play-button-size: 80px;
  --control-toggle-size: 100px;
  --control-toggle-width: 150px;
  --control-toggle-gap: -2px;
  --control-toggle-overlap: 16px;
}

/**
 * @block shared-responsive-tokens
 * @rol Reajusta tokens per pantalles petites.
 * @dep shared-root-tokens
 */
@media (max-width: 600px) {
  :root {
    --play-button-size: clamp(56px, 22vw, 70px);
    --control-toggle-size: clamp(60px, 32vw, 82px);
    --control-toggle-width: clamp(92px, 58vw, 124px);
    --control-toggle-gap: -28px;
    --control-toggle-overlap: 20px;
  }
}

/* Baseline: disable text selection across UI, allow in form fields */
html,
body {
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
  -webkit-touch-callout: none;
}

input,
textarea,
select {
  -webkit-user-select: text;
  -moz-user-select: text;
  user-select: text;
}

button,
a,
summary,
label {
  -webkit-tap-highlight-color: transparent;
}

/* Hide native number spinners (custom arrows used instead) */
input[type=number]::-webkit-outer-spin-button,
input[type=number]::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

input[type=number] {
  -moz-appearance: textfield;
  appearance: textfield;
}

/**
 * @block shared-theme-shell
 * @rol Aplica els colors segons el tema actiu.
 * @dep shared-root-tokens
 */
/* Theme containers (apps should set body[data-theme]) */
body[data-theme='light'] {
  background: var(--bg-light);
  color: var(--text-light);
  --line-color: var(--text-light);
  --color-contrast: #43433B;
  font-family: 'Ubuntu', sans-serif;
}

body[data-theme='dark'] {
  background: var(--bg-dark);
  color: var(--text-dark);
  --line-color: var(--text-dark);
  --color-contrast: #EEE8D8;
  font-family: 'Ubuntu', sans-serif;
}

/**
 * @block shared-header
 * @rol Estilitza la barra superior i el menÃº d'opcions.
 * @dep shared-theme-shell
 */
/* Shared header: top bar and dropdown menu (mirrors App1) */

.top-bar {
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  padding: 10px 0;
}

.top-bar .menu {
  position: absolute;
  left: 0;
  top: 0;
  font-size: 2rem;
  padding: 12px 6px;
  cursor: pointer;
}

.top-bar .sound-wrapper {
  position: absolute;
  right: 0;
  top: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 12px 6px;
}

.top-bar .sound {
  padding: 12px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  background: transparent;
  border: none;
  color: var(--line-color);
  order: 0;
}

.top-bar .sound-wrapper svg {
  width: 2rem;
  height: 2rem;
  display: block;
}

/**
 * @block shared-volume-slider
 * @rol Controla la transiciÃ³ vertical del slider de volum.
 * @dep shared-header
 */
.top-bar .sound-wrapper #volumeSlider {
  display: none;
  margin-right: 0;
  margin-top: 8px;
  width: 4px;
  height: 80px;
  writing-mode: bt-lr;
  writing-mode: vertical-lr;
  direction: rtl;
  -webkit-appearance: none;
  appearance: none;
  order: 1;
  /* Propiedades para la animaciÃ³n */
  transform: scaleY(0);
  transform-origin: top center;
  transition: transform 0.3s ease-out;
}

/* Estados de animaciÃ³n controlados completamente por JavaScript */
.top-bar .sound-wrapper #volumeSlider.show {
  transform: scaleY(1);
}

.top-bar .sound-wrapper #volumeSlider.hide {
  transform: scaleY(0);
}

.menu summary {
  cursor: pointer;
  font-family: 'Ubuntu', sans-serif;
  font-weight: 700;
  font-size: 2rem;
}

/* Hide marker for main menu */
.menu>summary {
  list-style: none;
  cursor: pointer;
}

.menu>summary::-webkit-details-marker {
  display: none;
}

.menu>summary::marker {
  content: '';
}

/* Menu options panel */
/**
 * @block shared-menu-panel
 * @rol Defineix el panell principal del menÃº desplegable.
 * @dep shared-header
 */
.menu .options-content {
  overflow: hidden;
  max-height: 0;
  opacity: 0;
  transition: max-height 0.5s ease, opacity 0.5s ease;
  font-family: 'Ubuntu', sans-serif;
  font-weight: 300;
  font-size: 0.9rem;
  line-height: 1.4;
  padding: 10px;
  border: 2px solid var(--line-color);
  border-radius: 8px;
  min-width: 220px;
  background-color: var(--bg-light) !important;
  color: var(--text-light);
}

body[data-theme='dark'] .menu .options-content {
  background-color: var(--bg-dark) !important;
  color: var(--text-dark);
}

.menu[open] .options-content {
  position: absolute;
  top: 100%;
  left: 0;
  z-index: 1000;
  max-height: 100vh;
  overflow-y: auto;
  opacity: 1;
}

/* Submenus (e.g., Sonidos) */
.menu .options-content details>summary {
  font-size: 1rem;
  font-weight: 400;
  font-family: 'Ubuntu', sans-serif;
  cursor: pointer;
  margin: 8px 0;
}

/* Labels inside menu */
.menu .options-content label {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin: 8px 0;
  font-size: 1rem;
  font-weight: 400;
  font-family: 'Ubuntu', sans-serif;
  line-height: 1.4;
  gap: 8px;
}

.menu .options-content .factory-reset {
  width: 100%;
  margin-top: 12px;
  padding: 8px 10px;
  border: 1px solid var(--line-color);
  border-radius: 6px;
  background: transparent;
  color: inherit;
  font-family: 'Ubuntu', sans-serif;
  font-size: 0.95rem;
  font-weight: 600;
  cursor: pointer;
  transition: color 0.2s ease, border-color 0.2s ease, background-color 0.2s ease;
}

.menu .options-content .factory-reset:hover,
.menu .options-content .factory-reset:focus-visible {
  border-color: var(--selection-color);
  color: var(--selection-color);
  outline: none;
}

.menu .options-content .factory-reset:active {
  transform: translateY(1px);
}

.menu .options-content select {
  width: 100%;
  box-sizing: border-box;
  padding: 4px;
  border: 1px solid var(--line-color);
  border-radius: 4px;
  font-family: 'Ubuntu', sans-serif;
  font-size: 0.9rem;
}

/* Custom dropdown for sound previews */
.menu .options-content .custom-dropdown {
  position: relative;
  width: 100%;
}

.custom-dropdown .dropdown-toggle {
  width: 100%;
  box-sizing: border-box;
  padding: 4px;
  border: 1px solid var(--line-color);
  border-radius: 4px;
  background: transparent;
  color: inherit;
  text-align: left;
  cursor: pointer;
  font-family: 'Ubuntu', sans-serif;
  font-size: 0.9rem;
  position: relative;
}

.custom-dropdown .dropdown-toggle::after {
  content: '';
  position: absolute;
  right: 8px;
  top: 50%;
  transform: translateY(-50%);
  border-width: 5px 4px 0 4px;
  border-style: solid;
  border-color: currentColor transparent transparent transparent;
}

.custom-dropdown .dropdown-panel {
  display: none;
  position: absolute;
  left: 0;
  right: 0;
  margin-top: 2px;
  border: 1px solid var(--line-color);
  border-radius: 4px;
  background-color: var(--bg-light);
  color: var(--text-light);
  z-index: 1000;
}

body[data-theme='dark'] .custom-dropdown .dropdown-panel {
  background-color: var(--bg-dark);
  color: var(--text-dark);
}

.custom-dropdown .dropdown-panel ul {
  list-style: none;
  margin: 0;
  padding: 0;
  max-height: 150px;
  overflow-y: auto;
}

.custom-dropdown .dropdown-panel li {
  padding: 4px 8px;
  cursor: pointer;
}

.custom-dropdown .dropdown-panel li.selected {
  background: var(--selection-color);
}

.custom-dropdown .dropdown-exit {
  width: 100%;
  padding: 4px 8px;
  border: none;
  border-top: 1px solid var(--line-color);
  background: transparent;
  color: inherit;
  cursor: pointer;
  border-radius: 0 0 4px 4px;
}

/* Preview row for sound selects */
.menu .options-content .preview-row {
  display: flex;
  align-items: center;
  gap: 8px;
}

.menu .options-content .preview-row .custom-dropdown {
  flex: 1;
}

.menu .options-content .preview-btn {
  padding: 4px 8px;
  border: 1px solid var(--line-color);
  border-radius: 4px;
  background: transparent;
  color: inherit;
  cursor: pointer;
}

.menu .options-content .preview-btn:hover {
  border-color: var(--selection-color);
  color: var(--selection-color);
}

/* spacing for sound selector labels */
.menu .options-content .sound-group p {
  margin: 0.5rem 0 0.25rem;
}

.menu .options-content .menu-separator {
  margin: 8px 0;
  border: none;
  border-top: 2px solid var(--line-color);
  opacity: 0.7;
}

.menu .options-content input[type="color"] {
  width: 33%;
}

.menu .options-content input[type="checkbox"] {
  width: 18px;
  height: 18px;
  order: 2;
}

.menu .options-content label[for="muteToggle"]::after {
  content: " ðŸ”Š";
}

.menu .options-content label[for="hoverToggle"]::after {
  content: " ðŸ’¬";
}

/* Circular input parameters (Lg, V, T) */
/* Keep spacing consistent between Sonidos and Rendimiento when Sonidos is expanded */
.menu .options-content details[open] {
  margin-bottom: 24px;
}

.inputs {
  display: flex;
  justify-content: center;
  gap: 26px;
  margin-top: 40px;
  margin-bottom: 20px;
  position: relative;
  left: -20px;
}

.param {
  display: flex;
  align-items: center;
  gap: 8px;
  font-size: 1.45rem;
}

.param.lg {
  color: var(--color-lg);
}

.param.v {
  color: var(--color-v);
}

.param.t {
  color: var(--color-t);
}

.param .abbr {
  font-size: 1.8rem;
  font-weight: 600;
}

.param .circle {
  width: 80px;
  height: 80px;
  border-radius: 50%;
  border: 2px solid currentColor;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}

.param .circle input {
  width: 100%;
  height: 100%;
  border: none;
  background: transparent;
  text-align: center;
  font-size: 1.6rem;
  color: inherit;
  outline: none;
}

/* Custom spinner for text-based numeric inputs (e.g., T) */
.param .circle .spinner {
  position: absolute;
  top: 0;
  right: 0;
  width: 24px;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 2px;
}

.param .circle .spinner .spin {
  flex: 0 0 12px;
  width: 100%;
  background: transparent;
  border: none;
  color: inherit;
  cursor: pointer;
  padding: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  line-height: 0;
}

.param .circle .spinner .spin::before {
  content: '';
  border-left: 4px solid transparent;
  border-right: 4px solid transparent;
}

.param .circle .spinner .spin.up::before {
  border-bottom: 6px solid currentColor;
}

.param .circle .spinner .spin.down::before {
  border-top: 6px solid currentColor;
}

.param .circle .spinner .spin:active {
  color: var(--selection-color);
}

/* Ensure input text doesn't overlap spinner */
.param.lg .circle input,
.param.v .circle input,
.param.t .circle input {
  padding-right: 24px;
}

.param .circle .unit {
  position: absolute;
  top: calc(var(--unit-label-offset, -40px) - 1.7rem);
  left: 50%;
  transform: translateX(-50%);
  font-size: 1.7rem;
  font-weight: 600;
  color: inherit;
  display: block !important;
  pointer-events: none;
}

.param .circle .led {
  position: absolute;
  top: -20px;
  left: 50%;
  transform: translateX(-50%);
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background: currentColor;
  opacity: 0.3;
  transition: opacity 0.2s ease;
  cursor: pointer;
  z-index: 2;
}

.param .circle .led::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 28px;
  height: 28px;
  border-radius: 50%;
  background: transparent;
  cursor: inherit;
}

.param .circle .led.on {
  opacity: 1;
}

/* Control buttons (play, loop, reset, tap tempo) */
.controls {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  margin-top: var(--controls-offset-y);
  width: 200px;
  height: 200px;
  margin-left: auto;
  margin-right: auto;
}

/*
  @block .control-sound-toggles
  @rol Orbita contenidora dels toggles de so al voltant del Play
  @dep --control-toggle-*, layout .controls
*/

.control-sound-toggles {
  position: absolute;
  top: 59%;
  left: 50%;
  transform: translate(-50%, calc(-50% - (var(--play-button-size) / 2 + var(--control-toggle-overlap))));
  width: calc(var(--control-toggle-width) * 3 + var(--control-toggle-gap) * 2);
  height: var(--control-toggle-size);
  pointer-events: none;
  z-index: 4;
}

.control-sound-toggles:not(:has(.control-sound-toggle-container--selected)) {
  width: calc(var(--control-toggle-width) * 2 + var(--control-toggle-gap));
}

@media (max-width: 600px) {
  .control-sound-toggles {
    top: 50%;
    left: 50%;
    transform: translate(-50%, calc(-50% - (var(--play-button-size) / 2 + 12px)));
    width: min(90vw, calc(var(--control-toggle-width) * 3 + var(--control-toggle-gap) * 2));
  }

  .control-sound-toggles:not(:has(.control-sound-toggle-container--selected)) {
    width: min(84vw, calc(var(--control-toggle-width) * 2 + var(--control-toggle-gap)));
  }
}

.control-sound-toggle-container {
  position: absolute;
  bottom: 0;
  width: var(--control-toggle-width);
  height: var(--control-toggle-size);
  pointer-events: none;
}

.control-sound-toggle-container--pulse {
  left: calc(var(--pulse-offset-x, 145px));
  bottom: var(--pulse-offset-y, 2px);
  transform: translateX(var(--pulse-translate-x, 0)) translateY(var(--pulse-translate-y, 0));
}

.control-sound-toggle-container--selected {
  left: calc(var(--control-toggle-width) + var(--control-toggle-gap) + var(--selected-offset-x, 0px));
  bottom: var(--selected-offset-y, 0px);
  transform: translateX(var(--selected-translate-x, 0)) translateY(var(--selected-translate-y, 0));
}

.control-sound-toggle-container--cycle {
  left: calc((var(--control-toggle-width) + var(--control-toggle-gap)) * 2 + var(--cycle-offset-x, -145px));
  bottom: var(--cycle-offset-y, 2px);
  transform: translateX(var(--cycle-translate-x, 0)) translateY(var(--cycle-translate-y, 0));
}

.control-sound-toggles:not(:has(.control-sound-toggle-container--selected)) .control-sound-toggle-container--pulse {
  left: calc(var(--pulse-offset-x, 70px));
}

.control-sound-toggles:not(:has(.control-sound-toggle-container--selected)) .control-sound-toggle-container--cycle {
  left: calc(var(--cycle-offset-x, 78px));
}

/*
  @block .control-sound-toggle
  @rol Semicercle (Pulso/FracciÃ³) al voltant del Play
  @dep --control-toggle-*, --line-color; hit-area delegada al <path>
*/
.control-sound-toggle {
  pointer-events: none;
  background: none;
  border: none;
  padding: 0;
  margin: 0;
  width: var(--control-toggle-width);
  height: var(--control-toggle-size);
  flex: 0 0 var(--control-toggle-width);
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: transform 0.1s ease;
  color: inherit;
  --control-toggle-color: currentColor;
  --control-toggle-active-color: var(--selection-color);
  --control-toggle-active-opacity: 0.9;
  --control-toggle-active-fill: var(--control-toggle-active-color);
  --control-toggle-active-outline: var(--control-toggle-active-color);
  --control-toggle-active-outline-opacity: var(--control-toggle-active-opacity);
  --control-toggle-active-glow: var(--control-toggle-active-color);
  --control-toggle-stroke-width: 2.25;
  --control-toggle-active-stroke-width: 3;
  -webkit-clip-path: var(--control-toggle-clip-path, none);
  clip-path: var(--control-toggle-clip-path, none);
}

@supports (color: color-mix(in srgb, red 50%, transparent)) {
  .control-sound-toggle {
    --control-toggle-active-fill: color-mix(in srgb, var(--control-toggle-active-color) 70%, transparent);
    --control-toggle-active-outline: color-mix(in srgb, var(--control-toggle-active-color) 85%, transparent);
    --control-toggle-active-glow: color-mix(in srgb, var(--control-toggle-active-color) 60%, transparent);
  }
}

.control-sound-toggle:active {
  transform: scale(0.98);
}

.control-sound-toggle__svg {
  width: 100%;
  height: 100%;
  display: block;
  overflow: visible;
}

.control-sound-toggle__shape {
  fill: transparent;
  fill-opacity: 0;
  stroke: currentColor;
  stroke-opacity: 0.5;
  stroke-width: var(--control-toggle-stroke-width);
  stroke-linecap: round;
  stroke-linejoin: round;
  filter: none;
  transition: fill-opacity 0.25s ease, filter 0.25s ease, stroke 0.25s ease, stroke-opacity 0.25s ease, stroke-width 0.25s ease;
  pointer-events: auto;
}

.control-sound-toggle__label {
  font-family: 'Ubuntu', sans-serif;
  font-weight: 550;
  font-size: 18px;
  letter-spacing: 3px;
  fill: var(--control-toggle-label-color, currentColor);
  opacity: 0.65;
  text-transform: uppercase;
  dominant-baseline: ideographic;
  transform: translateY(-15px);
  transform-box: fill-box;
  transition: fill 0.25s ease, opacity 0.25s ease;
  pointer-events: none;
  text-anchor: middle;
  paint-order: stroke fill;
  stroke: var(--control-toggle-label-outline-color, transparent);
  stroke-width: var(--control-toggle-label-outline-width, 0);
}

@media (max-width: 600px) {
  .control-sound-toggle__label {
    font-size: 13px;
    letter-spacing: 1.6px;
    transform: translateY(-8px);
  }
}

.control-sound-toggle.active .control-sound-toggle__shape {
  fill-opacity: 0;
  stroke: var(--control-toggle-active-outline);
  stroke-opacity: var(--control-toggle-active-outline-opacity);
  stroke-width: var(--control-toggle-active-stroke-width);
  filter: drop-shadow(0 0 8px var(--control-toggle-active-glow));
}

.control-sound-toggle.active .control-sound-toggle__label {
  opacity: 0.95;
  fill: var(--control-toggle-label-color, currentColor);
}

.control-sound-toggle--selected .control-sound-toggle__label {
  letter-spacing: 2px;
  transform: translateY(-13px);
}

.control-sound-toggle--pulse {
  --control-toggle-color: var(--control-toggle-pulse-color, currentColor);
  --control-toggle-active-color: var(--control-toggle-pulse-active-color, var(--selection-color));
  --control-toggle-clip-path: path('M -7% 83% A 57% 95% 0 0 1 50% -12% L 50% 30% A 32% 53% 0 0 0 18% 83% Z');
}

.control-sound-toggle--selected {
  --control-toggle-color: var(--control-toggle-selected-color, currentColor);
  --control-toggle-active-color: var(--control-toggle-selected-active-color, var(--selection-color));
  --control-toggle-clip-path: path('M 18% 83% A 32% 53% 0 0 1 50% 30% A 32% 53% 0 0 1 82% 83% Z');
}

.control-sound-toggle--cycle {
  --control-toggle-color: var(--control-toggle-cycle-color, currentColor);
  --control-toggle-active-color: var(--control-toggle-cycle-active-color, var(--selection-color));
  --control-toggle-clip-path: path('M 50% -12% A 57% 95% 0 0 1 107% 83% L 82% 83% A 32% 53% 0 0 0 50% 30% Z');
}

/* Base styles for all control buttons */
.play,
.loop,
.reset,
.tap,
.random {
  border-radius: 50%;
  border: 2px solid currentColor;
  cursor: pointer;
  background: transparent;
  transition: border-color 0.2s ease, box-shadow 0.2s ease, color 0.3s ease, transform 0.1s ease;
}

/* Central play button */
.play {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: var(--play-button-size);
  height: var(--play-button-size);
  font-size: 2rem;
  z-index: 2;
}

/* Positioning buttons around the play button using precise angles */
.tap {
  position: absolute;
  top: calc(50% + 65px);
  left: calc(50% + 30px);
  transform: translate(-50%, -50%);
  width: 48px;
  height: 48px;
  font-size: 1.2rem;
  opacity: 0.7;
}

/* Tooltip positioning for tap tempo help */
.tap+.tap-help {
  position: absolute;
  top: calc(50% + 65px + 48px + 8px);
  left: calc(50% + 30px);
  transform: translate(-50%, 0);
  background: rgba(0, 0, 0, 0.6);
  color: #fff;
  padding: 4px 8px;
  border-radius: 4px;
  font-size: 0.75rem;
  white-space: nowrap;
  display: none;
  pointer-events: none;
}

.loop {
  position: absolute;
  top: calc(50% + 65px);
  left: calc(50% - 30px);
  transform: translate(-50%, -50%);
  width: 48px;
  height: 48px;
  font-size: 1.2rem;
  opacity: 0.7;
}

.random {
  position: absolute;
  top: calc(50% + 20px);
  left: calc(50% - 70px);
  transform: translate(-50%, -50%);
  width: 48px;
  height: 48px;
  font-size: 1.2rem;
  opacity: 0.7;
}

.reset {
  position: absolute;
  top: calc(50% + 20px);
  left: calc(50% + 70px);
  transform: translate(-50%, -50%);
  width: 48px;
  height: 48px;
  font-size: 1.2rem;
  opacity: 0.7;
}

/* Inline SVG icons */
.play svg {
  width: 50%;
  height: 50%;
  fill: currentColor;
  pointer-events: none;
  display: block;
  margin: auto;
}

.loop svg,
.tap svg,
.random svg {
  width: 100%;
  height: 100%;
  fill: currentColor;
  pointer-events: none;
}

.reset svg {
  width: 105%;
  height: 110%;
  fill: currentColor;
  pointer-events: none;
}

/* Click effect (press + highlight for circular controls) */
.loop:active,
.reset:active,
.random:active,
.tap:active {
  transform: translate(-50%, -50%) scale(0.9);
  color: var(--selection-color);
  border-color: var(--selection-color);
  box-shadow: 0 0 10px var(--selection-color), 0 0 4px var(--selection-color) inset;
}

/* Active states */
.play.active {
  color: var(--selection-color);
  border-color: var(--selection-color);
  box-shadow: 0 0 10px var(--selection-color), 0 0 4px var(--selection-color) inset;
}

.loop.active {
  border-color: var(--selection-color);
  box-shadow: 0 0 10px var(--selection-color), 0 0 4px var(--selection-color) inset;
}

.random.active {
  border-color: var(--selection-color);
  box-shadow: 0 0 10px var(--selection-color), 0 0 4px var(--selection-color) inset;
}

/* Theme-specific colors */
body[data-theme='light'] .play,
body[data-theme='light'] .loop,
body[data-theme='light'] .reset,
body[data-theme='light'] .tap,
body[data-theme='light'] .random {
  color: var(--text-light);
}

body[data-theme='dark'] .play,
body[data-theme='dark'] .loop,
body[data-theme='dark'] .reset,
body[data-theme='dark'] .tap,
body[data-theme='dark'] .random {
  color: var(--text-dark);
}

/* Responsive adjustments for circular inputs */
@media (max-width: 600px) {
  :root {
    --controls-offset-y: 36px;
    --topbar-side-gap: 48px;
    /* reserve space so title never sits under icons */
    --unit-label-offset: -22px;
  }

  /* Header adjustments for small screens */
  .top-bar {
    margin: 0;
  }

  .top-bar .menu {
    padding: 10px 4px;
    font-size: 1.7rem;
  }

  .top-bar .sound-wrapper {
    padding: 10px 4px;
  }

  /* Disable volume slider completely on small screens */
  .top-bar .sound-wrapper #volumeSlider {
    display: none !important;
  }

  .inputs {
    left: 0;
    gap: 18px;
    margin-top: 28px;
  }

  .param {
    gap: 6px;
    font-size: 1.22rem;
  }

  .param .abbr {
    font-size: 1.45rem;
  }

  .param .circle {
    width: 56px;
    height: 56px;
  }

  .param .circle input {
    font-size: 0.95rem;
  }

  .param .circle .spinner {
    width: 16px;
    gap: 0;
  }

  .param.lg .circle input,
  .param.v .circle input,
  .param.t .circle input {
    padding-right: 16px;
  }

  .param .circle .unit {
    font-size: 1.1rem;
    letter-spacing: 0.02em;
    top: calc(var(--unit-label-offset, -32px) - 1.35rem);
  }

  .param .circle .led::before {
    width: 28px;
    height: 28px;
  }

  .controls {
    width: calc(var(--play-button-size) * 2.4);
    height: calc(var(--play-button-size) * 2.4);
    margin-top: calc(0px + var(--controls-offset-y));
  }

  .play {
    font-size: 1.2rem;
  }

  .loop,
  .reset,
  .tap,
  .random {
    width: 32px;
    height: 32px;
    font-size: 0.85rem;
  }

}

/* Header title stays centered and clear of the icons */
.top-bar h1 {
  margin: 0;
  width: 100%;
  text-align: center;
  padding: 0 var(--topbar-side-gap);
  font-size: clamp(1.45rem, 1.6vw, 1.95rem);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.75rem;
  flex-wrap: nowrap;
}

.top-bar-title-text {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  white-space: normal;
}

.top-bar h1 .top-bar-title-button {
  flex: 0 1 auto;
  min-width: 0;
}

.top-bar-notation-button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: clamp(2.2rem, 2.5vw, 2.75rem);
  height: clamp(2.2rem, 2.5vw, 2.75rem);
  padding: 0;
  border-radius: 999px;
  border: 2px solid currentColor;
  background: transparent;
  color: var(--text-light);
  cursor: pointer;
  line-height: 1;
  opacity: 0.9;
  appearance: none;
  transition: color 0.2s ease, transform 0.12s ease, background-color 0.2s ease, border-color 0.2s ease, box-shadow 0.2s ease;
}

body[data-theme='dark'] .top-bar-notation-button {
  color: var(--text-dark);
}

.top-bar-notation-button:hover {
  color: var(--selection-color);
  box-shadow: 0 0 12px rgba(249, 124, 57, 0.45);
  opacity: 1;
}

.top-bar-notation-button:active {
  transform: scale(0.94);
}

.top-bar-notation-button:focus-visible {
  outline: 2px solid var(--selection-color);
  outline-offset: 3px;
}

.top-bar-notation-button--active {
  color: var(--selection-color);
  border-color: var(--selection-color);
  background: rgba(249, 124, 57, 0.12);
  box-shadow: 0 0 18px rgba(249, 124, 57, 0.5);
  opacity: 1;
}

.top-bar-notation-button__icon {
  width: 70%;
  height: 70%;
  display: block;
  fill: currentColor;
}


.notation-panel {
  position: fixed;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: clamp(28px, 6vw, 48px);
  z-index: 1050;
}

.notation-panel--inline {
  position: static;
  inset: auto;
  display: none;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 0;
  margin: clamp(16px, 4vw, 28px) auto;
  max-width: 1200px;
  width: 100%;
  overflow-x: auto;
  z-index: auto;
}

.notation-panel[hidden],
.notation-panel--inline[hidden] {
  display: none;
}

.notation-panel__scrim {
  position: absolute;
  inset: 0;
  background: rgba(0, 0, 0, 0.45);
}

.notation-panel__dialog {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: clamp(20px, 4vw, 32px);
  width: min(840px, 70vw);
  max-width: 100%;
  max-height: min(88vh, 720px);
  padding: clamp(28px, 4vw, 44px);
  border-radius: 24px;
  background: #ffffff;
  color: var(--text-light);
  border: 1px solid rgba(0, 0, 0, 0.08);
  box-shadow: 0 48px 96px rgba(0, 0, 0, 0.22);
  overflow: hidden;
}

.notation-panel--inline .notation-panel__dialog {
  margin: 0 auto;
  width: 100%;
  max-width: none;
  max-height: none;
  padding: 0;
  border-radius: 0;
  border: none;
  background: transparent;
  box-shadow: none;
}

body[data-theme='dark'] .notation-panel__dialog {
  background: #ffffff;
  color: var(--text-light);
  border-color: rgba(0, 0, 0, 0.12);
  box-shadow: 0 48px 110px rgba(0, 0, 0, 0.35);
}

body[data-theme='dark'] .notation-panel--inline .notation-panel__dialog {
  box-shadow: none;
  border: none;
  background: transparent;
}

.notation-panel__header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 16px;
  width: 100%;
}

.notation-panel__title {
  font-size: 1.35rem;
  margin: 0;
}

.notation-panel__close {
  border: none;
  background: transparent;
  color: inherit;
  font-size: 1.75rem;
  line-height: 1;
  padding: 6px 10px;
  border-radius: 999px;
  cursor: pointer;
  transition: color 0.2s ease, background-color 0.2s ease;
}

.notation-panel__close:hover {
  color: var(--selection-color);
}

.notation-panel__close:focus-visible {
  outline: 2px solid var(--selection-color);
  outline-offset: 3px;
}

.notation-panel__canvas {
  width: 100%;
  min-height: 260px;
  border-radius: 18px;
  border: 1px dashed rgba(0, 0, 0, 0.18);
  display: block;
  background: #ffffff;
  background-color: #ffffff;
  padding: clamp(24px, 4vw, 36px);
  position: relative;
  margin: 0 auto;
  box-shadow: 0 24px 48px rgba(0, 0, 0, 0.16);
  overflow-x: auto;
  overflow-y: hidden;
}

.notation-panel--inline .notation-panel__canvas {
  border: none;
  border-radius: 0;
  box-shadow: none;
  padding: 0;
  background: transparent;
  background-color: transparent;
  overflow-x: auto;
  overflow-y: hidden;
}

body[data-theme='dark'] .notation-panel__canvas {
  border-color: rgba(0, 0, 0, 0.24);
  box-shadow: 0 24px 56px rgba(0, 0, 0, 0.28);
}

.notation-panel__canvas svg {
  background: #ffffff;
  display: block;
  margin: 0;
  filter: drop-shadow(0 6px 18px rgba(0, 0, 0, 0.12));
}

.notation-panel--inline .notation-panel__canvas svg {
  filter: none;
}

.rhythm-staff-container {
  position: relative;
  display: inline-block;
  min-width: 100%;
  background: transparent;
  padding: 0;
}

.rhythm-staff-container .vf-container {
  display: contents;
  background: inherit;
}

.rhythm-staff-container svg {
  display: block;
  height: auto;
}

.notation-playback-cursor {
  position: absolute;
  top: 0;
  left: 0;
  width: 2px;
  height: 100%;
  background: var(--selection-color, #F97C39);
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.2s ease;
  z-index: 10;
  transform-origin: left center;
}

.notation-playback-cursor--active {
  opacity: 0.75;
}

.notation-panel--inline.notation-panel--open {
  display: flex;
}

body.notation-open {
  overflow: hidden;
}

/* Custom scrollbar for notation panel */
.notation-panel__canvas::-webkit-scrollbar {
  height: 10px;
}

.notation-panel__canvas::-webkit-scrollbar-track {
  background: rgba(0, 0, 0, 0.08);
  border-radius: 5px;
}

.notation-panel__canvas::-webkit-scrollbar-thumb {
  background: var(--selection-color, #F97C39);
  border-radius: 5px;
}

.notation-panel__canvas::-webkit-scrollbar-thumb:hover {
  background: var(--selection-color, #F97C39);
  opacity: 1;
}

.notation-panel__canvas {
  scrollbar-width: thin;
  scrollbar-color: var(--selection-color, #F97C39) rgba(0, 0, 0, 0.08);
}

@media (max-width: 600px) {
  .top-bar h1 {
    gap: 0.5rem;
    font-size: 1.25rem;
  }

  .top-bar-notation-button {
    width: 2.2rem;
    height: 2.2rem;
  }

  .notation-panel {
    padding: 16px;
  }

  .notation-panel__dialog {
    width: min(640px, 100%);
    max-height: 92vh;
    padding: 20px 16px;
    border-radius: 18px;
    box-shadow: 0 24px 48px rgba(0, 0, 0, 0.2);
  }

  .notation-panel--inline .notation-panel__dialog {
    padding: 0;
    box-shadow: none;
  }

  body[data-theme='dark'] .notation-panel__dialog {
    box-shadow: 0 24px 64px rgba(0, 0, 0, 0.35);
  }

  .notation-panel__canvas {
    padding: 18px;
    min-height: 220px;
    border-radius: 16px;
    border: none;
    box-shadow: none;
  }

  .notation-panel--inline .notation-panel__canvas {
    padding: 0;
    border-radius: 0;
  }

  body[data-theme='dark'] .notation-panel__canvas {
    box-shadow: none;
  }

  .rhythm-staff-container {
    width: 100%;
    padding: 0;
    border-radius: 14px;
    background: transparent;
    box-shadow: none;
  }
}

.loop {
  top: calc(50% + var(--play-button-size) * 0.75);
  left: calc(73% - var(--play-button-size) * 0.92);
}

.random {
  top: calc(55% + var(--play-button-size) * 0.1);
  left: calc(65% - var(--play-button-size) * 1.18);
}

.reset {
  top: calc(55% + var(--play-button-size) * 0.1);
  left: calc(35% + var(--play-button-size) * 1.18);
}

.tap {
  top: calc(50% + var(--play-button-size) * 0.75);
  left: calc(27% + var(--play-button-size) * 0.92);
}

.tap+.tap-help {
  top: calc(50% + var(--play-button-size) * 0.75 + 32px + 8px);
  left: calc(29% + var(--play-button-size) * 0.92);
}


/* ---- Timeline layering & hitâ€‘testing (shared) ---- */
.timeline {
  position: relative;
}

.timeline .lines,
.timeline .grid,
.timeline .grid-lines,
.timeline .hline,
.timeline .baseline,
.timeline svg .grid,
.timeline svg .lines {
  pointer-events: none;
  z-index: 0;
}

.timeline .pulses {
  position: relative;
  z-index: 2;
  pointer-events: auto;
}

.timeline .pulse {
  z-index: 2;
  pointer-events: auto;
}

/* Shared hover tooltip */
.hover-tip {
  position: fixed;
  pointer-events: none;
  background: rgba(0, 0, 0, 0.6);
  color: #fff;
  padding: 4px 8px;
  border-radius: 4px;
  font-size: 0.75rem;
  white-space: nowrap;
  transform: translate(-50%, -100%);
  opacity: 0;
  transition: opacity 0.15s ease;
  z-index: 1000;
}

.hover-tip.show {
  opacity: 1;
}